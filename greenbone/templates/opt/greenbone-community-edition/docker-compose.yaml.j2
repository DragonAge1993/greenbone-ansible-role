{{ ansible_managed | comment }}
---
services:
  vulnerability-tests:
    image: "{{ greenbone_registry }}/vulnerability-tests:latest"
    environment:
      FEED_RELEASE: "{{ greenbone_feed_release }}"
    volumes:
      - vt_data_vol:/mnt
  notus-data:
    image: "{{ greenbone_registry }}/notus-data:latest"
    volumes:
      - notus_data_vol:/mnt
  scap-data:
    image: "{{ greenbone_registry }}/scap-data:latest"
    volumes:
      - scap_data_vol:/mnt
  cert-bund-data:
    image: "{{ greenbone_registry }}/cert-bund-data:latest"
    volumes:
      - cert_data_vol:/mnt
  dfn-cert-data:
    image: "{{ greenbone_registry }}/dfn-cert-data:latest"
    volumes:
      - cert_data_vol:/mnt
    depends_on:
      - cert-bund-data
  data-objects:
    image: "{{ greenbone_registry }}/data-objects:latest"
    environment:
      FEED_RELEASE: "{{ greenbone_feed_release }}"
    volumes:
      - data_objects_vol:/mnt
  report-formats:
    image: "{{ greenbone_registry }}/report-formats:latest"
    environment:
      FEED_RELEASE: "{{ greenbone_feed_release }}"
    volumes:
      - data_objects_vol:/mnt
    depends_on:
      - data-objects
  gpg-data:
    image: "{{ greenbone_registry }}/gpg-data:{{ greenbone_gpg_data_tag }}"
    volumes:
      - gpg_data_vol:/mnt
  redis-server:
    image: "{{ greenbone_registry }}/redis-server:{{ greenbone_redis_server_tag }}"
    restart: on-failure
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - redis_socket_vol:/run/redis/
  pg-gvm:
    image: "{{ greenbone_registry }}/pg-gvm:{{ greenbone_pg_gvm_tag }}"
    restart: on-failure
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - psql_data_vol:/var/lib/postgresql
      - psql_socket_vol:/var/run/postgresql
  gvmd:
    image: "{{ greenbone_registry }}/gvmd:{{ greenbone_gvmd_tag }}"
    restart: on-failure
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - gvmd_data_vol:/var/lib/gvm
      - scap_data_vol:/var/lib/gvm/scap-data/
      - cert_data_vol:/var/lib/gvm/cert-data
      - data_objects_vol:/var/lib/gvm/data-objects/gvmd
      - vt_data_vol:/var/lib/openvas/plugins
      - psql_data_vol:/var/lib/postgresql
      - gvmd_socket_vol:/run/gvmd
      - ospd_openvas_socket_vol:/run/ospd
      - ospd_openvas_socket_vol:/run/ospd_2
      - psql_socket_vol:/var/run/postgresql
      - {{ greenbone_directory_certs }}:/var/lib/gvm/CA
    depends_on:
      pg-gvm:
        condition: service_started
      scap-data:
        condition: service_completed_successfully
      cert-bund-data:
        condition: service_completed_successfully
      dfn-cert-data:
        condition: service_completed_successfully
      data-objects:
        condition: service_completed_successfully
      report-formats:
        condition: service_completed_successfully
  gsa:
    image: "{{ greenbone_registry }}/gsa:{{ greenbone_gsa_tag }}"
    restart: on-failure
    ports:
      - 9392:80
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - gvmd_socket_vol:/run/gvmd
    depends_on:
      - gvmd
  openvas:
    image: "{{ greenbone_registry }}/openvas-scanner:{{ greenbone_openvas_scanner_tag }}"
    restart: on-failure
    volumes:
      - {{ greenbone_directory_openvas_conf_greenbone }}:/etc/openvas
  openvasd:
    image: "{{ greenbone_registry }}/openvas-scanner:{{ greenbone_openvas_scanner_tag }}"
    restart: on-failure
    environment:
      OPENVASD_MODE: service_notus
      GNUPGHOME: /etc/openvas/gnupg
      LISTENING: 0.0.0.0:80
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - {{ greenbone_directory_openvas_conf_greenbone }}:/etc/openvas
      - gpg_data_vol:/etc/openvas/gnupg
      - notus_data_vol:/var/lib/notus
    depends_on:
      vulnerability-tests:
        condition: service_completed_successfully
      gpg-data:
        condition: service_completed_successfully
    networks:
      default:
        aliases:
          - openvasd
  ospd-openvas:
    image: "{{ greenbone_registry }}/ospd-openvas:{{ greenbone_ospd_openvas_tag }}"
    restart: on-failure
    hostname: ospd-openvas.local
    cap_add:
      - NET_ADMIN
      - NET_RAW
    security_opt:
      - seccomp=unconfined
      - apparmor=unconfined
    command:
      [
        "ospd-openvas",
        "-f",
        "--config",
        "/etc/gvm/ospd-openvas.conf",
        "--notus-feed-dir",
        "/var/lib/notus/advisories",
        "-m",
        "666",
      ]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - gpg_data_vol:/etc/openvas/gnupg
      - vt_data_vol:/var/lib/openvas/plugins
      - notus_data_vol:/var/lib/notus
      - ospd_openvas_socket_vol:/run/ospd
      - redis_socket_vol:/run/redis/
      - {{ greenbone_directory_openvas_conf_greenbone }}:/etc/openvas
    depends_on:
      redis-server:
        condition: service_started
      gpg-data:
        condition: service_completed_successfully
      vulnerability-tests:
        condition: service_completed_successfully
  gvm-tools:
    image: "{{ greenbone_registry }}/gvm-tools:{{ greenbone_gvm_tools_tag }}"
    volumes:
      - gvmd_socket_vol:/run/gvmd
      - ospd_openvas_socket_vol:/run/ospd
    depends_on:
      - gvmd
      - ospd-openvas
{% for index in range(1, greenbone_count_scanner_ospd + 1) %}
  openvas-{{ index }}:
    image: "{{ greenbone_registry }}/openvas-scanner:{{ greenbone_openvas_scanner_tag }}"
    restart: on-failure
    volumes:
      - {{ greenbone_directory_all_openvas_scanners }}_{{ index }}:/etc/openvas
    networks:
      default:
        aliases:
          - openvas-{{ index }}
  openvasd-{{ index }}:
    image: "{{ greenbone_registry }}/openvas-scanner:{{ greenbone_openvas_scanner_tag }}"
    restart: on-failure
    environment:
      OPENVASD_MODE: service_notus
      GNUPGHOME: /etc/openvas/gnupg
      LISTENING: 0.0.0.0:80
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - {{ greenbone_directory_all_openvas_scanners }}_{{ index }}:/etc/openvas
      - gpg_data_vol:/etc/openvas/gnupg
      - notus_data_vol:/var/lib/notus
    depends_on:
      vulnerability-tests:
        condition: service_completed_successfully
      gpg-data:
        condition: service_completed_successfully
    networks:
      default:
        aliases:
          - openvasd-{{ index }}
  ospd-openvas-{{ index }}:
    image: "{{ greenbone_registry }}/ospd-openvas:{{ greenbone_ospd_openvas_tag }}"
    restart: on-failure
    hostname: ospd-openvas-{{ index }}.local
    cap_add:
      - NET_ADMIN
      - NET_RAW
    security_opt:
      - seccomp=unconfined
      - apparmor=unconfined
    command:
      - "ospd-openvas"
      - "-f"
      - "--config"
      - "/etc/gvm/ospd-openvas.conf"
      - "--notus-feed-dir"
      - "/var/lib/notus/advisories"
      - "--bind-address"
      - "0.0.0.0"
      - "--port"
      - "80"
      - "-m"
      - "666"
      - "--key-file"
      - "/var/lib/gvm/CA/serverkey.pem"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - gpg_data_vol:/etc/openvas/gnupg
      - vt_data_vol:/var/lib/openvas/plugins
      - notus_data_vol:/var/lib/notus
      - redis_socket_vol:/run/redis/
      - {{ greenbone_directory_all_openvas_scanners }}_{{ index }}:/etc/openvas
      - {{ greenbone_directory_certs }}:/var/lib/gvm/CA
    depends_on:
      redis-server:
        condition: service_started
      gpg-data:
        condition: service_completed_successfully
      vulnerability-tests:
        condition: service_completed_successfully
    networks:
      default:
        aliases:
          - ospd-openvas-{{ index }}
{% endfor %}
volumes:
  gpg_data_vol: {}
  scap_data_vol: {}
  cert_data_vol: {}
  data_objects_vol: {}
  gvmd_data_vol: {}
  psql_data_vol: {}
  vt_data_vol: {}
  notus_data_vol: {}
  psql_socket_vol: {}
  gvmd_socket_vol: {}
  ospd_openvas_socket_vol: {}
  redis_socket_vol: {}
  openvas_data_vol: {}
